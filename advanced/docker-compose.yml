version: '3.8'

services:

  nginx:
    container_name: nginx
    restart: always
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/app
    depends_on:
      - backend
    networks:
      - fastapi-network

  backend:
    container_name: backend
    restart: always
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    env_file:
      - .env
    volumes:
      - .:/app
    command: 'sh -c "alembic upgrade head && python app/main.py --host 0.0.0.0 --port 8000"'
    depends_on:
      - fastapi-db
    networks:
      - fastapi-network
      

  fastapi-db:
    container_name: fastapi-db
    image: postgres:15
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fastapi-network
      
  adminer:
      image: adminer
      ports:
        - 5051:8080
      environment:
        ADMINER_DEFAULT_SERVER: fastapi-db
      depends_on:
        - fastapi-db
      networks:
        - fastapi-network

volumes:
  postgres_data:
networks:
  fastapi-network: